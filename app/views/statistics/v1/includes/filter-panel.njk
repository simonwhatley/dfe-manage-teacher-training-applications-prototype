{% set filterOptionsHtml %}

  {{ govukCheckboxes({
    idPrefix: "cycle",
    name: "statisticsOptions[cycle]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "cycle" | getStatisticsOptionLabel,
        isPageHeading: false,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "2020 to 2021",
        text: "2020 to 2021" | cycleText,
        checked: true if data.statisticsOptions.cycle and data.statisticsOptions.cycle == "2020 to 2021"
      },
      {
        value: "2019 to 2020",
        text: "2019 to 2020" | cycleText,
        checked: true if data.statisticsOptions.cycle and data.statisticsOptions.cycle == "2019 to 2020"
      }
    ]
  }) if (showOptions and 'cycle' in showOptions) }}

  {{ govukCheckboxes({
    idPrefix: "status",
    name: "statisticsOptions[status]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "status" | getStatisticsOptionLabel,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Received",
        text: "Received",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Received"
      },
      {
        value: "Interviewing",
        text: "Interviewing",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Interviewing"
      },
      {
        value: "Offered",
        text: "Offered",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Offered"
      },
      {
        value: "Awaiting conditions",
        text: "Awaiting conditions",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Awaiting conditions"
      },
      {
        value: "Ready to enroll",
        text: "Ready to enroll",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Ready to enroll"
      },
       {
        value: "Conditions not met",
        text: "Conditions not met",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Conditions not met"
      },
      {
        value: "Deferred",
        text: "Deferred",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Deferred"
      },
      {
        value: "Declined",
        text: "Declined",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Declined"
      },
      {
        value: "Rejected",
        text: "Rejected",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Rejected"
      },
      {
        value: "Application withdrawn",
        text: "Application withdrawn",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Application withdrawn"
      },
      {
        value: "Offer withdrawn",
        text: "Offer withdrawn",
        checked: true if data.statisticsOptions.status and data.statisticsOptions.status == "Offer withdrawn"
      }
    ]
  })  if (showOptions and 'status' in showOptions) }}

  {{ govukCheckboxes({
    idPrefix: "provider",
    name: "statisticsOptions[provider]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "trainingProvider" | getStatisticsOptionLabel,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Wren Academy",
        text: "Wren Academy",
        checked: true if data.statisticsOptions.provider and data.statisticsOptions.provider == "Wren Academy"
      },
      {
        value: "The Royal Borough Teaching School Alliance",
        text: "The Royal Borough Teaching School Alliance",
        checked: true if data.statisticsOptions.provider and data.statisticsOptions.provider == "The Royal Borough Teaching School Alliance"
      }
    ]
  }) if (showOptions and 'trainingProvider' in showOptions) }}

  {#% if checked(data.provider, data.user.organisations[0].name) %}

    {{ govukCheckboxes({
      name: "statisticsOptions[location]",
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: "location" | getStatisticsOptionLabel,
          classes: "govuk-fieldset__legend--s"
        }
      },
      items: [
        {
          value: "Main site",
          text: "Main site",
          checked: true if data.statisticsOptions.location and data.statisticsOptions.location == "Main site"
        },
        {
          value: "Camberley - training location",
          text: "Camberley - training location",
          checked: true if data.statisticsOptions.location and data.statisticsOptions.location == "Camberley - training location"
        },
        {
          value: "Epsom Grinstead - training location",
          text: "Epsom Grinstead - training location",
          checked: true if data.statisticsOptions.location and data.statisticsOptions.location == "Epsom Grinstead - training location"
        },
        {
          value: "Lingfield - training location",
          text: "Lingfield - training location",
          checked: true if data.statisticsOptions.location and data.statisticsOptions.location == "Lingfield - training location"
        }
      ]
    }) }}

  {% endif %#}

  {{ govukCheckboxes({
    idPrefix: "accreditedBody",
    name: "statisticsOptions[accreditedBody]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "accreditedBody" | getStatisticsOptionLabel,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Springbank SCITT",
        text: "Springbank SCITT",
        checked: true if data.statisticsOptions.accreditedBody and data.statisticsOptions.accreditedBody == "Springbank SCITT"
      },
      {
        value: "Kingston University",
        text: "Kingston University",
        checked: true if data.statisticsOptions.accreditedBody and data.statisticsOptions.accreditedBody == "Kingston University"
      }
    ]
  }) if (showOptions and 'accreditedBody' in showOptions) }}

  {#% if subjectItems.length >= subjectItemsDisplayLimit %}

    {{ appCheckboxFilter({
      idPrefix: "subject",
      name: "statisticsOptions[subject]",
      legend: {
        text: "subject" | getStatisticsOptionLabel
      },
      items: subjectItems,
      selectedItems: selectedSubjects,
      classes: "govuk-!-margin-bottom-7"
    }) }}

  {% else %}

    {{ govukCheckboxes({
      idPrefix: "subject",
      name: "statisticsOptions[subject]",
      fieldset: {
        legend: {
          text: "subject" | getStatisticsOptionLabel,
          classes: "govuk-fieldset__legend--s"
        }
      },
      items: subjectItems,
      classes: "govuk-checkboxes--small"
    }) }}

  {% endif %#}

  {{ govukCheckboxes({
    idPrefix: "studyMode",
    name: "statisticsOptions[studyMode]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "studyMode" | getStatisticsOptionLabel,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Full time",
        text: "Full time",
        checked: true if data.statisticsOptions.studyMode and data.statisticsOptions.studyMode == "Full time"
      },
      {
        value: "Part time",
        text: "Part time",
        checked: true if data.statisticsOptions.studyMode and data.statisticsOptions.studyMode == "Part time"
      }
    ]
  }) if (showOptions and 'studyMode' in showOptions) }}

  {{ govukCheckboxes({
    idPrefix: "fundingType",
    name: "statisticsOptions[fundingType]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "fundingType" | getStatisticsOptionLabel,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Fee paying",
        text: "Fee paying",
        checked: true if data.statisticsOptions.fundingType and data.statisticsOptions.fundingType == "Fee paying"
      },
      {
        value: "Salaried",
        text: "Salaried",
        checked: true if data.statisticsOptions.fundingType and data.statisticsOptions.fundingType == "Salaried"
      },
      {
        value: "Apprenticeship",
        text: "Apprenticeship",
        checked: true if data.statisticsOptions.fundingType and data.statisticsOptions.fundingType == "Apprenticeship"
      }
    ]
  }) if (showOptions and 'fundingType' in showOptions) }}

  {{ govukCheckboxes({
    idPrefix: "subjectLevel",
    name: "statisticsOptions[subjectLevel]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "subjectLevel" | getStatisticsOptionLabel,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Primary",
        text: "Primary",
        checked: true if data.statisticsOptions.subjectLevel and data.statisticsOptions.subjectLevel == "Primary"
      },
      {
        value: "Secondary",
        text: "Secondary",
        checked: true if data.statisticsOptions.subjectLevel and data.statisticsOptions.subjectLevel == "Secondary"
      }
    ]
  }) if (showOptions and 'subjectLevel' in showOptions) }}
{% endset %}

<div class="app-filter">
  <div class="app-filter__header">
    <div class="app-filter__header-title">
      <h2 class="govuk-heading-m">Filters</h2>
    </div>
    <div class="app-filter__header-action">

    </div>
  </div>
  <div class="app-filter__content">
    {% if selectedOptions %}
      <div class="app-filter__selected">
        <div class="app-filter__selected-heading">
          <div class="app-filter__heading-title">
            <h2 class="govuk-heading-m govuk-!-margin-bottom-1">Selected filters</h2>
            <p class="govuk-body"><a class="govuk-link govuk-link--no-visited-state" href="/statistics/v1/remove-all-filters">Clear filters</a></p>
          </div>
        </div>

        {% for category in selectedOptions.categories %}
          <h3 class="govuk-heading-s govuk-!-margin-bottom-0">{{ category.heading.text }}</h3>
          <ul class="app-filter-tags">
            {% for item in category.items %}
              <li><a class="app-filter__tag" href="{{ item.href }}"><span class="govuk-visually-hidden">Remove this filter</span> {{item.text}}</a></li>
            {% endfor %}
          </ul>
        {% endfor %}
      </div>
    {% endif %}
    <div class="app-filter__options">
      <form method="get" accept-charset="UTF-8" novalidate>
        <button class="govuk-button" data-module="govuk-button">
          Apply filters
        </button>
        {{ filterOptionsHtml | safe }}
      </form>
    </div>
  </div>
</div>
